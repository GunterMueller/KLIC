:- module main.
main :-
	klicio:klicio([stdout(Res)]),
	check_stream(Res).

check_stream(normal(S)) :-
	primes(10000, C),
	S = [putt(C),nl].
check_stream(abnormal).

primes(Max,C) :- gen_primes(Max,Ps), count(Ps,C).

gen_primes(Max,Ps) :- gen(2,Max,Ns), sift(Ns,Ps).

gen(N0,Max,Ns0) :- N0=<Max | Ns0=[N0|Ns1], N1:=N0+1, gen(N1,Max,Ns1).
gen(N0,Max,Ns0) :- N0 >Max | Ns0=[].

sift([],     Zs0) :- Zs0=[].
sift([P|Xs1],Zs0) :- Zs0=[P|Zs1], filter(P,Xs1,Ys), sift(Ys,Zs1).

filter(_,[],     Ys0) :-               Ys0=[].
filter(P,[X|Xs1],Ys0) :- X mod P=\=0 | Ys0=[X|Ys1], filter(P,Xs1,Ys1).
filter(P,[X|Xs1],Ys0) :- X mod P=:=0 |              filter(P,Xs1,Ys0).

count(L,C) :- count(L,0,C).

count([],C0,C) :- C=C0.
count([_|T],C0,C) :- C1:=C0+1, count(T,C1,C).
