%!PS-Adobe-2.0 EPSF-1.2
%%BoundingBox: 51 624 505 826
%%Title: child-goals
%%CreationDate: Mon Jan 24 19:30:26 1994
%%Creator: Tgif-2.12 by William Chia-Wei Cheng (william@cs.UCLA.edu)
%%Pages: 1
%%DocumentFonts: Times-Roman Helvetica Courier NewCenturySchlbk Symbol
%%EndComments
%%BeginProlog
%
%	Due to bugs in Transcript, the 'PS-Adobe-' stuff is omitted from line 1
%

/tgifdict 130 dict def
tgifdict begin

/tgifellipsedict 6 dict def
tgifellipsedict /mtrx matrix put

/tgifellipse
 { tgifellipsedict begin
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 0 360 arc
      savematrix setmatrix
   end
 } def

/tgifarrowtipdict 8 dict def
tgifarrowtipdict /mtrx matrix put

/tgifarrowtip
 { tgifarrowtipdict begin
      /dy exch def
      /dx exch def
      /h exch def
      /w exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      dy dx atan rotate
      0 0 moveto
      w neg h lineto
      w neg h neg lineto
      savematrix setmatrix
   end
 } def

/tgifarcdict 8 dict def
tgifarcdict /mtrx matrix put

/tgifarcn
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arc
      savematrix setmatrix
   end
 } def

/tgifarc
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arcn
      savematrix setmatrix
   end
 } def

/tgifsetuserscreendict 22 dict def
tgifsetuserscreendict begin
   /tempctm matrix def
   /temprot matrix def
   /tempscale matrix def

   /concatprocs
    { /proc2 exch cvlit def
      /proc1 exch cvlit def
      /newproc proc1 length proc2 length add array def
      newproc 0 proc1 putinterval
      newproc proc1 length proc2 putinterval
      newproc cvx
    } def
   /resmatrix matrix def
   /findresolution
    { 72 0 resmatrix defaultmatrix dtransform
      /yres exch def /xres exch def
      xres dup mul yres dup mul add sqrt
    } def
end

/tgifsetuserscreen
 { tgifsetuserscreendict begin
      /spotfunction exch def
      /screenangle exch def
      /cellsize exch def

      /m tempctm currentmatrix def
      /rm screenangle temprot rotate def
      /sm cellsize dup tempscale scale def

      sm rm m m concatmatrix m concatmatrix pop

      1 0 m dtransform /y1 exch def /x1 exch def

      /veclength x1 dup mul y1 dup mul add sqrt def
      /frequency findresolution veclength div def

      /newscreenangle y1 x1 atan def

      m 2 get m 1 get mul m 0 get m 3 get mul sub 0 gt

      {{neg} /spotfunction load concatprocs
         /spotfunction exch def
      } if

      frequency newscreenangle /spotfunction load setscreen
   end
 } def

/tgifsetpatterndict 18 dict def
tgifsetpatterndict begin
   /bitison
    { /ybit exch def /xbit exch def
      /bytevalue bstring ybit bwidth mul xbit 8 idiv add get def

      /mask 1 7 xbit 8 mod sub bitshift def
      bytevalue mask and 0 ne
    } def
end

/tgifbitpatternspotfunction
 { tgifsetpatterndict begin
      /y exch def /x exch def

      /xindex x 1 add 2 div bpside mul cvi def
      /yindex y 1 add 2 div bpside mul cvi def

      xindex yindex bitison
       { /onbits onbits 1 add def 1 }
       { /offbits offbits 1 add def 0 }
       ifelse
   end
 } def

/tgifsetpattern
 { tgifsetpatterndict begin
      /cellsz exch def
      /angle exch def
      /bwidth exch def
      /bpside exch def
      /bstring exch def

      /onbits 0 def /offbits 0 def
      cellsz angle /tgifbitpatternspotfunction load tgifsetuserscreen
      {} settransfer
      offbits offbits onbits add div setgray
   end
 } def

/tgifxpmdict 4 dict def
/tgifbwpicstr 1 string def
/tgifcolorpicstr 3 string def

/tgifsetpixels { tgifxpmdict begin /pixels exch def end } def

/tgifsetpix { tgifxpmdict begin pixels 3 1 roll putinterval end } def

/tgifbwspot
 { tgifxpmdict begin
      /index exch def
      tgifbwpicstr 0
      pixels index 3 mul 3 getinterval aload pop
      255 mul .114 mul exch 255 mul .587 mul add exch 255 mul .299 mul add
      cvi put
      tgifbwpicstr
   end
 } def

/tgifcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop
      255 mul cvi tgifcolorpicstr 2 3 -1 roll put
      255 mul cvi tgifcolorpicstr 1 3 -1 roll put
      255 mul cvi tgifcolorpicstr 0 3 -1 roll put
      tgifcolorpicstr
   end
 } def

/tgifnewcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop setrgbcolor
   end
 } def

/tgifcolordict 4 dict def

/colorimage where
 { pop }
 { /colorimage
   { tgifcolordict begin
        pop pop pop pop pop
        /ih exch def
        /iw exch def
        /x 0 def
        /y 0 def
        1 1 ih
         { pop 1 1 iw
            { pop currentfile
              tgifbwpicstr readhexstring pop 0 get tgifnewcolorspot
              x y moveto 1 0 rlineto 0 1 rlineto -1 0 rlineto
              closepath fill
              /x x 1 add def
            } for
           /y y 1 add def
           /x 0 def
         } for
     end
   } def
 } ifelse

/tgifpatdict 10 dict def

/tgifpatbyte
 { currentdict /retstr get exch
   pat i cellsz mod get put
 } def

/tgifpatproc
 { 0 1 widthlim {tgifpatbyte} for retstr
   /i i 1 add def
 } def

/tgifpatfill
 { tgifpatdict begin
      /h exch def
      /w exch def
      /lty exch def
      /ltx exch def
      /cellsz exch def
      /pat exch def

      /widthlim w cellsz div cvi 1 sub def
      /retstr widthlim 1 add string def
      /i 0 def

      ltx lty translate
      w h true [1 0 0 1 0 0] {tgifpatproc} imagemask
      ltx neg lty neg translate
   end
 } def

/pat1 <ffffffffffffffff> def
/pat2 <0000000000000000> def
/pat3 <8000000008000000> def
/pat4 <8800000022000000> def
/pat5 <8800220088002200> def
/pat6 <8822882288228822> def
/pat7 <aa55aa55aa55aa55> def
/pat8 <77dd77dd77dd77dd> def
/pat9 <77ffddff77ffddff> def
/pat10 <77ffffff77ffffff> def
/pat11 <7fffffff7fffffff> def
/pat12 <8040200002040800> def
/pat13 <40a00000040a0000> def
/pat14 <ff888888ff888888> def
/pat15 <ff808080ff080808> def
/pat16 <f87422478f172271> def
/pat17 <038448300c020101> def
/pat18 <081c22c180010204> def
/pat19 <8080413e080814e3> def
/pat20 <8040201008040201> def
/pat21 <8844221188442211> def
/pat22 <77bbddee77bbddee> def
/pat23 <c1e070381c0e0783> def
/pat24 <7fbfdfeff7fbfdfe> def
/pat25 <3e1f8fc7e3f1f87c> def
/pat26 <0102040810204080> def
/pat27 <1122448811224488> def
/pat28 <eeddbb77eeddbb77> def
/pat29 <83070e1c3870e0c1> def
/pat30 <fefdfbf7efdfbf7f> def
/pat31 <7cf8f1e3c78f1f3e> def

/tgifcentertext { dup stringwidth pop 2 div neg 0 rmoveto } def

/tgifrighttext { dup stringwidth pop neg 0 rmoveto } def

/tgifreencsmalldict 12 dict def
/tgifReEncodeSmall
 { tgifreencsmalldict begin
      /newcodesandnames exch def
      /newfontname exch def
      /basefontname exch def

      /basefontdict basefontname findfont def
      /newfont basefontdict maxlength dict def

      basefontdict
      { exch dup /FID ne
         { dup /Encoding eq
            { exch dup length array copy newfont 3 1 roll put }
            { exch newfont 3 1 roll put }
            ifelse
         }
         { pop pop }
         ifelse
      }
      forall

      newfont /FontName newfontname put
      newcodesandnames aload pop

      newcodesandnames length 2 idiv
      { newfont /Encoding get 3 1 roll put}
      repeat

      newfontname newfont definefont pop
   end
 } def

/tgifgray { 8 1 0 72 300 32 div div tgifsetpattern } bind def

/tgifboxdict 6 dict def
/tgifboxstroke
 { tgifboxdict begin
      /pat def /w def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      1.415 setmiterlimit
      w 1 eq { w setlinewidth } if
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray stroke 0 setgray } { stroke } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
      w 1 eq { 1 setlinewidth } if
      1 setmiterlimit
   end
 } def
/tgifboxfill
 { tgifboxdict begin
      /pat def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray fill 0 setgray } { fill } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
   end
 } def

%%Title: eucfont.ps
%%Creator: shikida@cs.titech.ac.jp, ueno@cs.titech.ac.jp
%%CreationDate: 1991-2-27
%%EndComments

% <font> copyfont <font>
/copyfont {
	dup maxlength 1 add dict begin
	{
		1 index /FID ne 2 index /UniqueID ne and
		{def} {pop pop} ifelse
	} forall
	currentdict
	end
} bind def

/slantfont {	% <SlantFontName> <FontName> <slant-degree> slantfont
	exch dup type /nametype eq { findfont } if
	copyfont begin
		[ 1 0 4 -1 roll 1 0 0 ] FontMatrix exch matrix concatmatrix
		/FontMatrix exch def
		currentdict
	end
	definefont pop
} def

/Map2Encoding [
	0 1 31 { pop 0 } for
	0 1 8 { } for
	1 1 7 { pop 0 } for
	9 1 77 { } for
	1 1 11 { pop 0 } for
] def
/Map5Encoding [
	0 1 31 { pop 0 dup } for
	0 1 8 { dup } for
	1 1 7 { pop 0 dup } for
	9 1 77 { dup } for
	1 1 11 { pop 0 dup } for
] def

% <newfont> <asciifont> <kanjifont> eucfont
/eucfont {
	12 dict begin
		dup type /nametype eq { findfont } if
		dup /WMode known {
			dup /WMode get /WMode exch def
			WMode 1 eq {
				[0.0 1.0 -1.0 0.0 0.0 0.3] makefont copyfont
			} if
		} if
		dup /FMapType get /FMapType exch def
		FMapType 2 eq {
			copyfont dup begin
				/Encoding Map2Encoding def
			end /font1 exch definefont
		} if
		FMapType 5 eq {
			copyfont dup begin
				/Encoding Map5Encoding def
			end /font1 exch definefont
		} if
		exch dup type /nametype eq { findfont } if exch
		/FontType 0 def
		/FMapType 4 def
		/FontMatrix matrix def
		/Encoding [ 0 1 ] def
		/FDepVector [ 4 2 roll ] def
		dup /FontName exch def
		currentdict
	end
	definefont pop
} def

end

%%EndProlog
%%Page: 1 1

tgifdict begin
/tgifsavedpage save def

1 setmiterlimit
1 setlinewidth

72 0 mul 72 11.7 mul translate
72 128 div 100 mul 100 div dup neg scale

gsave

% OVAL
gsave
   2 setlinewidth
   newpath 192 160 64 32 tgifellipse stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      256 160 moveto
      0 64 atan dup cos 10 mul 320 exch sub
      exch sin 10 mul 160 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      320 160 10 4 64 0 tgifarrowtip
   closepath fill
grestore

% OVAL
gsave
   2 setlinewidth
   newpath 384 160 64 32 tgifellipse stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      448 160 moveto
      0 64 atan dup cos 10 mul 512 exch sub
      exch sin 10 mul 160 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      512 160 10 4 64 0 tgifarrowtip
   closepath fill
grestore

% OVAL
gsave
   2 setlinewidth
   newpath 576 160 64 32 tgifellipse stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
% /Times-Bold-GothicBBB-Medium-EUC-H /Times-Bold /GothicBBB-Medium-EUC-H eucfont
/GothicBBB-Medium-EUC-H findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      192 167 moveto (\277\306\245\264\241\274\245\353) tgifcentertext show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      272 96 moveto
      304.00 96.00 325.33 109.33
      40 16 atan dup cos 10 mul 336 exch sub
      exch sin 10 mul 136 exch sub curveto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      336 136 10 4 16 40 tgifarrowtip
   closepath fill
grestore

% TEXT
0 setgray
/GothicBBB-Medium-EUC-H findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      192 359 moveto (\273\322\245\264\241\274\245\353) tgifcentertext show
   grestore

% TEXT
0 setgray
/GothicBBB-Medium-EUC-H findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      240 103 moveto (\265\255\262\261) tgifcentertext show
   grestore

% OVAL
gsave
   2 setlinewidth
   newpath 192 352 64 32 tgifellipse stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      256 352 moveto
      0 64 atan dup cos 10 mul 320 exch sub
      exch sin 10 mul 352 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      320 352 10 4 64 0 tgifarrowtip
   closepath fill
grestore

% OVAL
gsave
   2 setlinewidth
   newpath 384 352 64 32 tgifellipse stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      448 352 moveto
      0 64 atan dup cos 10 mul 512 exch sub
      exch sin 10 mul 352 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      512 352 10 4 64 0 tgifarrowtip
   closepath fill
grestore

% TEXT
0 setgray
/GothicBBB-Medium-EUC-H findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      384 359 moveto (\273\322\245\264\241\274\245\353) tgifcentertext show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      272 288 moveto
      432.00 288.00 517.33 301.33
      40 16 atan dup cos 10 mul 528 exch sub
      exch sin 10 mul 328 exch sub curveto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      528 328 10 4 16 40 tgifarrowtip
   closepath fill
grestore

% TEXT
0 setgray
/GothicBBB-Medium-EUC-H findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      240 295 moveto (\265\255\262\261) tgifcentertext show
   grestore

% TEXT
0 setgray
/GothicBBB-Medium-EUC-H findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      384 167 moveto (\245\264\241\274\245\353 A) tgifcentertext show
   grestore

% TEXT
0 setgray
/GothicBBB-Medium-EUC-H findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      576 167 moveto (\245\264\241\274\245\353 B) tgifcentertext show
   grestore

% OVAL
gsave
   2 setlinewidth
   newpath 576 352 64 32 tgifellipse stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      640 352 moveto
      0 64 atan dup cos 10 mul 704 exch sub
      exch sin 10 mul 352 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      704 352 10 4 64 0 tgifarrowtip
   closepath fill
grestore

% OVAL
gsave
   2 setlinewidth
   newpath 768 352 64 32 tgifellipse stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      832 352 moveto
      0 64 atan dup cos 10 mul 896 exch sub
      exch sin 10 mul 352 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      896 352 10 4 64 0 tgifarrowtip
   closepath fill
grestore

% TEXT
0 setgray
/GothicBBB-Medium-EUC-H findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      576 359 moveto (\245\264\241\274\245\353 A) tgifcentertext show
   grestore

% TEXT
0 setgray
/GothicBBB-Medium-EUC-H findfont [25 0 0 -25 0 0] makefont setfont
   gsave
      768 359 moveto (\245\264\241\274\245\353 B) tgifcentertext show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      640 160 moveto
      0 64 atan dup cos 10 mul 704 exch sub
      exch sin 10 mul 160 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      704 160 10 4 64 0 tgifarrowtip
   closepath fill
grestore

% TEXT
0 setgray
/GothicBBB-Medium-EUC-H findfont [34 0 0 -34 0 0] makefont setfont
   gsave
      96 62 moveto (CALL \245\335\241\274\245\310:) show
   grestore

% TEXT
0 setgray
/GothicBBB-Medium-EUC-H findfont [34 0 0 -34 0 0] makefont setfont
   gsave
      96 254 moveto (REDUCE \245\335\241\274\245\310:) show
   grestore

grestore
tgifsavedpage restore
end
%%Trailer
%MatchingCreationDate: Mon Jan 24 19:30:26 1994
%%EOF

